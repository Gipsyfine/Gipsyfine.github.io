<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Recency Bias</title>
    <link href="/2023/06/14/Recency%20Bias/"/>
    <url>/2023/06/14/Recency%20Bias/</url>
    
    <content type="html"><![CDATA[<h1 id="Recency-Bias"><a href="#Recency-Bias" class="headerlink" title="Recency Bias"></a>Recency Bias</h1><p>近因偏差。</p><p>是指人们在做出决策或形成判断时，过分重视最近接收到的信息或经历的事件，而忽视或低估更早的信息或事件。这种偏见使得人们更容易受到最新的、最鲜明的经验或信息的影响，而忽略了过去的经验或信息。</p><p><code>近因偏差</code>在许多领域都存在，包括投资决策、选举投票、面试评价、新闻报道和历史回顾等。人们往往更倾向于记住最近发生的事件，并在决策或判断中给予它们更大的权重。</p><p>例如，当投资者做出投资决策时，他们可能更容易受到最近的市场表现或热门投资的影响，而忽视长期趋势或更全面的市场分析。同样，招聘面试中的近期偏见可能导致招聘者更多地关注候选人的最近经验或表现，而对他们的整体工作历史进行过度简化。</p><p>意识到近期偏见的存在可以帮助我们更客观地评估情况，并采取措施来避免单纯依赖最近的信息或经验。这可能包括更深入地研究历史数据、寻找更全面的信息来源，或者通过团队讨论来平衡不同时间段的观点和经验。</p>]]></content>
    
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hiphop</title>
    <link href="/2023/06/13/Hiphop/"/>
    <url>/2023/06/13/Hiphop/</url>
    
    <content type="html"><![CDATA[<h1 id="Hiphop"><a href="#Hiphop" class="headerlink" title="Hiphop"></a>Hiphop</h1><blockquote><p>这个故事开始在公园外面</p><p>1973真的很特别一年</p><p>在这个时候有一个东西出现</p><p>能够让整个世界改变</p><p>来自纽约的布朗克斯</p><p>有一个年轻人想到新的尝试</p><p>Two Turntables</p><p>Mic check one two</p><p>他叫Kool Herc</p><p>他是Hip-hop的教父</p><p>他主办的活动好像新鲜空气</p><p>当时追求名利和财富并不是动机</p><p>生活环境不理想而不是哭</p><p>只可以希望通过音乐逃出</p><p>谁会猜到五十多年后</p><p>说唱的影响全球继续感受</p><p>你想充分了解这个东西</p><p>它的历史是最重要Indeed (千真万确)</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>娱乐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>赞美的艺术</title>
    <link href="/2023/06/13/%E8%B5%9E%E7%BE%8E%E7%9A%84%E8%89%BA%E6%9C%AF/"/>
    <url>/2023/06/13/%E8%B5%9E%E7%BE%8E%E7%9A%84%E8%89%BA%E6%9C%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="赞美的艺术"><a href="#赞美的艺术" class="headerlink" title="赞美的艺术"></a>赞美的艺术</h1><p>“好看又有才华”</p><p>“son，i’m so proud of you”</p><p>“站立于时代浪潮，拥有国际视野，深藏多元技能”</p><p>“adorable cuty”</p><p>“Gipsyfine big fan”</p><p>“你做了很酷的事”</p>]]></content>
    
    
    
    <tags>
      
      <tag>摘录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>电脑故障妙招</title>
    <link href="/2023/06/13/%E7%94%B5%E8%84%91%E6%95%85%E9%9A%9C%E5%A6%99%E6%8B%9B/"/>
    <url>/2023/06/13/%E7%94%B5%E8%84%91%E6%95%85%E9%9A%9C%E5%A6%99%E6%8B%9B/</url>
    
    <content type="html"><![CDATA[<h1 id="故障解决"><a href="#故障解决" class="headerlink" title="故障解决"></a>故障解决</h1><p>关机<br>拔出所有外接设备<br>长按开机键20秒以上<br>再开机</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>好的文字</title>
    <link href="/2023/06/13/%E5%A5%BD%E7%9A%84%E6%96%87%E5%AD%97/"/>
    <url>/2023/06/13/%E5%A5%BD%E7%9A%84%E6%96%87%E5%AD%97/</url>
    
    <content type="html"><![CDATA[<h1 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h1><ul><li><p>窈窕淑女君子好逑，可我在漂流。两个人的逍遥游，没熬到船到桥头。</p></li><li><p>隔着眼泪看世界，仿佛整个宇宙都在哭。</p></li><li><p>当你穿过了暴风雨，你就不再是原来那个人。                      ——村上春树</p></li><li><p>有多深刻就有多单纯，有多单纯就有多深刻。</p></li><li><p>太阳给我生命，月亮给我诗情。</p></li><li><p>Peter Parker, if there’s one thing you are, it’s good.                     ——《超凡蜘蛛侠》</p></li><li><p>也就是说，尽管抱着那张专辑去走过高中走廊的少女的身影在我脑海中仍清晰得惊人，但在漫长的岁月中，我却从未萌生过想要亲自听一听那张LP的念头。不知道为什么，我似乎没有多少兴趣去了解她抱在胸前的那张塑料碟片的凹槽里，究竟刻着怎样的旋律。</p></li><li><p>后来，我再也没有见过那位抱着《和披头士一起》LP的美丽少女。她是否仍在一九六四的那条昏暗的高中走廊里，裙裾翻飞地走着？仍然十六岁，仍然将那张印有约翰、保罗、乔治、林戈半明半暗肖像的漂亮封套郑重其事地抱在胸前。</p></li><li><p>但关于它们的回忆有时也许会走过漫漫长路，来到我身边，然后以令人难以置信的力量，撼动我的心。就像晚秋的夜风一般，卷起森林中的树叶，吹倒芒草丛生的荒原，有力地叩响家家户户的大门。</p></li><li><p>爱也许终有尽头，也许结不出美好的果实，但就算爱会消逝，就算爱不能如愿，我们仍然可以怀揣着爱过某个人的记忆。</p></li><li><p>天青色的瓷器只有在出窑的那一刻是烟雨天，它的釉色才会变成天青色，因此这种瓷器尤为珍贵，所以天青色是对烟雨的等待。</p></li><li><p>“我的花会‘昙花一现’，”小王子想，“而她只有四根刺保护自己，应付这个世界！我却抛弃了她，让她孤苦伶仃地待在我家！”</p></li><li><p>“最好在同一个时间来，”狐狸说，“例如，如果你是下午四点钟来的，从三点钟开始，我就开始感觉到幸福的滋味了。越接近四点钟，我越觉得幸福。到了四点钟，我就心神恍惚，坐立不安了。我发现了幸福的价值，但是如果你不按时来，我就不知道几点钟该装扮我的心，仪式还是需要的。”</p></li><li><p>“你们长得很美，但你们的感情世界一片空白。”小王子还对她们说。“没有人为你们而死。不错，行人会认为我的玫瑰与你们没有两样，但只有她比你们重要，因为我给她浇了水，我给她盖上花罩，我给她竖起屏风，给她避风挡雨。我为她杀死了几条毛虫（除了两三条我没杀，要让它们变成蝴蝶），我倾听她的抱怨，或她的吹嘘，有时也看着她默默无语的样子，因为她是我的玫瑰。”</p></li><li><p>人间的面，吃一碗就多一碗的滋味，见一面就多一面的回忆。<a href="https://www.bilibili.com/video/BV1qL4y1g7u8?spm_id_from=333.851.b_7265636f6d6d656e64.7">网址</a></p></li><li><p>“一个可爱的人，很多人都会去爱的，但当ta不再像以前那么可爱，你还会去爱ta，而且愿意去发掘ta的可爱之处，那这可能就是真正的爱了，而要做到这一步就必须要有一颗宽容的心。如果爱只是一种感觉，那么当他遇到挑战，这种感觉很快就会消失。因为我们很容易在不同的人身上获得这种感觉，所以移情别恋最经常的说辞就是没有感觉了。但真正的爱并非是一种感觉，它更多的是一种责任。真正的爱一定不是瞬间的感动，而必然是一种恒久的委身，彼此牺牲彼此成就，彼此尊重。很多人为了寻找爱情，在不同的情人中，周旋探索，最终觉得自己越来越孤独，原因就在于，自恋的爱永远不能长久……”</p></li><li><p>“不畏浮云遮望眼，自缘身在最高层。”</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>摘录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>西方哲学史</title>
    <link href="/2023/06/13/%E8%A5%BF%E6%96%B9%E5%93%B2%E5%AD%A6%E5%8F%B2/"/>
    <url>/2023/06/13/%E8%A5%BF%E6%96%B9%E5%93%B2%E5%AD%A6%E5%8F%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h1><p>1.理念（原型、基本模式）是柏拉图哲学的核心。</p><p>2.死里逃生并不难，难的是逃避罪恶。</p><p>3.我去死，你们去活，我们谁的命运更好，只有神知道。</p><p>4.我们不必考虑众人对我们的评论，我们应该听从那个懂得什么是正确什么是错误的人的意见，听从真理本身。</p><p>5.错误的行动永远是不对的，以错误对错误也是不对的。</p><p>6.最智慧、最勇敢的心灵最不容易被任何外界的影响所干扰或改变。</p><p>7.过分的快乐有如过分的痛苦可以使人失态忘形。</p><p>8.正确的爱是对于美的有秩序的事物的一种有节制的和谐的爱。</p><p>9.一个未经省察的生活是不值得人过的生活。</p><p>10.政治的目的是胜利，而哲学的目的是真理。</p><p>11.哪怕泰山崩于前，他依然谈笑自若地关照着自己的灵魂，使张牙舞爪的死亡自讨没趣。</p><p>12.要想达到事物的真理，思想之路要比感觉之路更为可靠。</p><p>13.柏拉图认为，人之行为有三种根源：欲望、情感和知识。</p><p>14.世上只有三样东西具备真正的价值：正义、美和真理。</p><p>15.柏拉图最欠缺的或许是赫拉克利特的变化意识：他过于焦急地想将这个世界的活动场景凝固成一副静止的图画。</p><p>16.柏拉图明白自己的乌托邦实际上远非真的可行。他承认自己描绘了一种无法实现的情境，但他认为这种对美好愿景的描绘其实是有价值的2：人的价值就在于不断地憧憬，并努力实现憧憬的一部分；人生来就是一种创造乌托邦的动物。</p><p>17.“我们瞻前顾后，渴望并不存在的东西。”而这一切也并非全都无疾而终：我们的许多梦想都已经生根发芽，有些甚至已经开花结果。就像伊卡洛斯做的人类能够飞翔的梦一样。尽管我们只描绘了一幅画，但它可以作为我们行动的目标和标准；当更多的人看到并愿意去实现这一梦想时，乌托邦距离真正实现也就不远了。</p><p>18.我们身上总是保留着许多为我们自己所谴责的东西：就像只有相似之处才能拿来做比较，相似之人才会争吵，最剧烈的争战也往往爆发于意图或信仰之上最细微的差异。</p><p>19.过去曾经存在的东西，现在存在的东西，将来会存在的东西，全都是心灵的安排。</p><p>20.一个精神富有的人会首要寻求没有痛苦，没有烦恼的状态，追求宁静和闲暇，亦即争取过上一种安静、简朴和尽量不受骚扰的生活。</p><p>21.卓越的精神思想会导致一个人不喜欢与他人交往。</p><p>22.愚蠢的人饱受无聊之苦。</p><p>23.人们在这个世界上要么选择独处，要么选择庸俗，除此之外，再没有更多别的选择了。</p><p>24.无论如何，我们不应该从他人那里，或者从自身之外在任何方面期望太多。他人对我们所能做的只是极为有限。归根到底，每个人都孑然独立。</p><p>25.幸福属于那些自得其乐的人。 ——亚里士多德</p><p>26.没有精神思想消遣的闲暇就是死亡，它就像要把人活生生地埋葬。——塞涅卡《书信》</p><p>27.我们在这世上时日不多，不值得在可鄙的坏蛋脚下爬行。——伏尔泰</p><p>28.把他的一生献给真理。——尤维纳利斯，《讽刺诗》</p>]]></content>
    
    
    
    <tags>
      
      <tag>摘录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Time Management</title>
    <link href="/2023/06/13/Time%20Management/"/>
    <url>/2023/06/13/Time%20Management/</url>
    
    <content type="html"><![CDATA[<h1 id="时间管理-Time-Management"><a href="#时间管理-Time-Management" class="headerlink" title="时间管理(Time Management)"></a>时间管理(<em>Time Management</em>)</h1><h2 id="每周168小时-每月720小时"><a href="#每周168小时-每月720小时" class="headerlink" title="每周168小时 每月720小时"></a>每周168小时 每月720小时</h2><p>“良好的时间管理不意味着总是在忙于一个又一个活动，有时,我会骑着自行车去一些地方闲逛，只是因为我喜欢悠闲地单车之旅。”</p><p>“把时间当作一种转瞬即逝的资产。”</p><p>“你不是你的思想，相反，你是在更高的层次聆听你的思想。”</p><p>“你可以采取的唯一最重要的一个步骤是学会不认同自己的思想。有时你可以对你心中的某些想法一笑了之，把它们当作少不更事的小孩子荒诞不经的恶作剧。”</p><p>“在你决定要做什么，并对其进行排序的时候，你首先要解决那些最难办的项目。”</p><h2 id="时间管理：意识、目标、选择"><a href="#时间管理：意识、目标、选择" class="headerlink" title="时间管理：意识、目标、选择"></a>时间管理：<strong>意识、目标、选择</strong></h2><p>目标：1.具体 2.有时间范围 3.很现实 4.很重要</p><p>目标 ≠ 任务</p><p>任务 → 工作清单</p><p>目标 → 使命描述</p><h2 id="任务分级"><a href="#任务分级" class="headerlink" title="任务分级"></a>任务分级</h2><p>A <strong>重要</strong>而紧急</p><p>B <strong>重要</strong>而不紧急</p><p>C紧急但不重要</p><p>D 既不紧急也不重要</p><p>重要 ≻ 紧急</p><h2 id="二八定律"><a href="#二八定律" class="headerlink" title="二八定律"></a>二八定律</h2><p><strong>80%</strong> 的成就来自于<strong>20%</strong> 的行为。</p><h2 id="好习惯"><a href="#好习惯" class="headerlink" title="好习惯"></a>好习惯</h2><p>1.将属于某个单一项目的每一份文件、每一本书或文章放在同一个地方。</p><p>2.一天抽一或两次时间回复语音信息、短信或电子邮件。</p><p>3.过去的已经结束，现在(<em>present</em>)是一份礼物(<em>present</em>)。</p>]]></content>
    
    
    
    <tags>
      
      <tag>个人发展</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Prompt Engineering</title>
    <link href="/2023/06/12/Prompt%20Engineering/"/>
    <url>/2023/06/12/Prompt%20Engineering/</url>
    
    <content type="html"><![CDATA[<h1 id="Prompt-Engineering"><a href="#Prompt-Engineering" class="headerlink" title="Prompt Engineering"></a><a href="https://learn.microsoft.com/en-us/azure/cognitive-services/openai/concepts/prompt-engineering">Prompt Engineering</a></h1><p>提示工程。</p><h2 id="Basics"><a href="#Basics" class="headerlink" title="Basics"></a>Basics</h2><p>基本信息。</p><p>文本提示(<em><strong>text prompts</strong></em>)是用户与 GPT 模型交互的方式。 与所有生成语言模型一样，GPT 模型会尝试生成最有可能紧跟上一个文本的下一系列字词。 就好像在说 “ <em>What is the first thing that comes to your mind when I say <strong>prompt</strong> ?</em> “</p><h3 id="Prompt-components"><a href="#Prompt-components" class="headerlink" title="Prompt components"></a>Prompt components</h3><p>提示组件。</p><p>使用补全 API 时，所有组件都是可选的，但必须至少有一个组件存在，而大多数提示包含多个组件。 组件之间也可能存在一些灰色区域。</p><h4 id="Instructions"><a href="#Instructions" class="headerlink" title="Instructions"></a>Instructions</h4><p>指令。</p><p>指令可能是最常用的<strong>提示组件</strong>。 指令很简单：向模型说明要执行的操作。</p><h3 id="Primary-Content"><a href="#Primary-Content" class="headerlink" title="Primary Content"></a>Primary Content</h3><p>主要内容。</p><p>主要内容是指模型正在处理或转换的某种文本。 主要内容通常与指令一起使用。 一个简单的示例是语言翻译。 </p><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><p>示例。</p><p>成功的提示通常依赖于“单样本”或“少样本”学习。 这是指加入模型所需行为的一个或多个示例，通常做法是加入输入和输出对。 这不是从模型进行永久更改这一意义上学习，而是通过示例更好地使模型能够仅根据当前推理的需求做出响应。 使用没有示例的提示有时称为“零样本”学习。 请注意，使用聊天补全 API 时，在初始系统消息后，少样本学习示例通常以示例用户&#x2F;助手交互的形式添加到消息数组中。</p><h3 id="Cue"><a href="#Cue" class="headerlink" title="Cue"></a>Cue</h3><p>线索。</p><p>Cue充当模型输出的“快速启动”，帮助将模型定向到所需的输出。Cue通常与指令(Instructions)一起使用，但并非总是如此。 Cue在一种情况下用于帮助<strong>聚焦</strong>模型的输出，在另一种情况下用于建议特定输出<strong>格式</strong>（项目符号）。</p><h3 id="Supporting-content"><a href="#Supporting-content" class="headerlink" title="Supporting content"></a>Supporting content</h3><p>支持内容。</p><p>支持内容是模型可用于以某种方式影响输出的信息。 它与主要内容的不同之处在于，它不是任务的主要目标，但它通常与主要内容一起使用。 常见示例包括上下文信息，例如当前日期、用户名、用户偏好等。</p><h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><p>由以上基本概念和元素共同组合了 <em><strong>Prompt</strong></em> ，再一次，文本提示(<em><strong>text prompts</strong></em>)是用户与 GPT 模型交互的方式。 </p><h2 id="Best-practices"><a href="#Best-practices" class="headerlink" title="Best practices"></a>Best practices</h2><p>最佳实践。</p><h3 id="Key-points"><a href="#Key-points" class="headerlink" title="Key points"></a>Key points</h3><ul><li><strong>尽量具体</strong>。 尽可能少留解读空间。 限制操作空间。</li><li><strong>具有描述性</strong>。 使用类比。</li><li><strong>强调</strong>。 有时可能需要对模型进行重复操作。 在主要内容之前和之后提供说明，使用指令和提示等。</li><li><strong>给事项排序</strong>。 向模型呈现信息的顺序可能会影响输出。 你选择是在内容之前放置指令（“汇总以下内容…”）还是之后（“汇总以上…”）会影响输出。 即使是少样本示例的顺序也很重要。 这被称为“近因偏差”-recency bias。</li><li><strong>给模型一个“出路”</strong>。 如果模型无法完成分配的任务，有时为模型提供备用路径可能会有所帮助。 例如，在对一段文本提出问题时，可以加入类似于“如果答案不存在，则回复‘未找到’”之类的内容。 这有助于避免模型生成错误响应。</li></ul><h2 id="Space-efficiency"><a href="#Space-efficiency" class="headerlink" title="Space efficiency"></a>Space efficiency</h2><p>空间效率。</p><p>虽然输入大小会随着 GPT 模型的迭代而增加，但仍存在提供的数据超出模型所能处理的数据量的情况。 GPT 模型将单词分解为“标记”[tokens]。 常见的多音节单词通常是单个标记，而不太常见的单词会按音节拆分。 标记有时可能违反直觉，如以下示例所示，它演示了不同日期格式的标记边界。 在这种情况下，拼出整个月份比使用完全数字的日期更具空间效益。 当前的标记支持范围：早期 GPT-3 模型支持 2000 个标记，最新的 GPT-4 模型 32k 版本支持最多 32,768 个标记。</p><p><img src="https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/media/prompt-engineering/space-efficiency.png#lightbox" alt="文本字符串的屏幕截图，其中突出显示了标记边界的颜色。"></p><p>由于空间有限，请务必尽可能高效地使用它。</p><ul><li>表格 - GPT 模型可以非常轻松地理解表格格式的数据。相较于在每个字段前面加上名称（例如 JSON）, 这是一种空间高效的包含数据的方式，。</li><li>空格 - 连续的空格被视为单独的标记，这很容易浪费空间。 另一方面，单词前面的空格通常被视为与单词相同的标记的一部分。 请仔细观察空格的使用情况，不要在单独使用空格就足够时使用标点符号。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Method</title>
    <link href="/2023/06/12/Method/"/>
    <url>/2023/06/12/Method/</url>
    
    <content type="html"><![CDATA[<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><p><strong>create a new repository on the command line</strong></p><p>echo “# Intership” &gt;&gt; README.md<br>git init<br>git add README.md<br>git commit -m “first commit”<br>git branch -M main<br>git remote add origin <a href="https://github.com/Gipsyfine/Intership.git">https://github.com/Gipsyfine/Intership.git</a><br>git push -u origin main</p><p><strong>push an existing repository from the command line</strong></p><p>git remote add origin <a href="https://github.com/Gipsyfine/Intership.git">https://github.com/Gipsyfine/Intership.git</a><br>git branch -M main<br>git push -u origin main</p><p>1.创建SSH Key</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">&quot;youremail@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>2.在” C:\Users\gmlea\.ssh\id_rsa.pub”将 SSH 公钥内容复制到剪贴板</p><p>3…在Github找到”Add SSH key”（添加 SSH 密钥）按钮，将新的 SSH 密钥添加到你的 GitHub 帐户。</p><p>4.在本地仓库中，使用以下命令将远程仓库的 URL 更改为 SSH 链接：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">git remote <span class="hljs-built_in">set-url</span> origin git@github.com:&lt;username&gt;/&lt;repository&gt;.git<br></code></pre></td></tr></table></figure><p>将 <code>&lt;username&gt;</code> 替换为你的 GitHub 用户名，<code>&lt;repository&gt;</code> 替换为你的仓库名称。</p><p>现在，你已经将 GitHub 仓库的推送方式从 HTTPS 更改为 SSH。你可以使用 SSH 链接进行推送和拉取操作，无需提供密码或令牌。确保在进行任何推送操作之前进行测试，以确保 SSH 链接已正确配置</p><p>5.<code>git remote -v</code> 命令用于显示当前 Git 仓库的远程仓库的详细信息，包括远程仓库的 URL。它显示了远程仓库的名称和对应的 URL，以及该 URL 使用的协议（HTTPS 或 SSH）。这个命令可以帮助你确认远程仓库的配置是否正确，并查看你的本地仓库与远程仓库的关联情况。</p><p>6.<code>ssh -T git@github.com</code> 命令用于测试 SSH 连接。它尝试建立到 GitHub 的 SSH 连接，并显示连接结果。它主要用于验证你的 SSH 配置是否正确，以及是否能够成功连接到 GitHub。它不会显示与远程仓库的具体关联信息，只是测试连接状态。</p><h2 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell"></a>Powershell</h2><ol><li>在 Windows 11 高级用户菜单中：Windows Key + X键盘快捷键并选择Windows PowerShell (Admin)。</li></ol><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p><strong>本地启动</strong></p><p>cd “C:\Users\gmlea\hexo-blog”</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hexo clean<br>hexo g<br>hexo s<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Prompt Engineering Techniques</title>
    <link href="/2023/06/12/Prompt%20Engineering%20Techniques/"/>
    <url>/2023/06/12/Prompt%20Engineering%20Techniques/</url>
    
    <content type="html"><![CDATA[<h1 id="Prompt-Engineering-Techniques"><a href="#Prompt-Engineering-Techniques" class="headerlink" title="Prompt Engineering Techniques"></a><a href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/concepts/advanced-prompt-engineering?pivots=programming-language-chat-completions">Prompt Engineering Techniques</a></h1><p>提示工程技术。</p><p>对于 Azure OpenAI GPT 模型，目前有两个不同的 API，提示工程可以在其中发挥作用：</p><ul><li><strong>聊天补全 API</strong>。[<strong>Chat Completion</strong>]</li><li>补全 API。[Completion]</li></ul><p>每种 API 要求以不同的格式输入数据，这反过来又会影响整体的提示设计。 <strong>聊天补全 API</strong> 支持 ChatGPT 和 GPT-4 模型。 这些模型旨在接收存储在字典数组中的<a href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/how-to/chatgpt">类似聊天的特定脚本</a>格式的输入。</p><p>从技术上讲，ChatGPT 模型可与任一 API 一起使用，但强烈建议对这些模型使用聊天补全 API。 </p><h2 id="System-message"><a href="#System-message" class="headerlink" title="System message"></a>System message</h2><p>系统消息。</p><p>系统消息包含在提示的开头，用于为模型提供上下文、说明或与用例相关的其他信息。 可以使用系统消息来描述助手的个性，定义模型应回答和不应回答的内容，以及定义模型响应的格式。</p><p>需要了解的一个重要细节是，即使你在系统消息中指示模型在不确定答案时回答“<strong>我不知道</strong>”，这并不能保证此请求得到履行。 设计良好的系统消息可以增加产生特定结果的可能性，但仍可能会生成不正确的响应，可能会与系统消息中的指令的意图相矛盾。</p><h2 id="Few-shot-learning"><a href="#Few-shot-learning" class="headerlink" title="Few-shot learning"></a>Few-shot learning</h2><p>少样本学习。</p><p>在提示中提供一组训练示例，以便为模型提供额外的上下文，用来引导模型以某种方式相应，模仿特定的行为，并为常见的问题提供种子答案。</p><h2 id="Non-chat-scenarios"><a href="#Non-chat-scenarios" class="headerlink" title="Non chat scenarios"></a>Non chat scenarios</h2><p>非聊天场景。</p><p>虽然<strong>聊天补全 API</strong>已优化为处理多回合对话，但它也可用于非聊天场景。 例如，对于情绪分析场景，</p><h2 id="Start-with-clear-instructions"><a href="#Start-with-clear-instructions" class="headerlink" title="Start with clear instructions"></a>Start with clear instructions</h2><p>从明确的说明开始。</p><p>提示中显示信息的顺序很重要。 这是因为 GPT 风格的模型是以某种方式构建的，这定义了它们处理输入的方式。在共享其他上下文信息或示例之前，在提示开始时告诉模型你希望它执行的任务有助于生成更高质量的输出。</p><h2 id="Repeat-instructions-at-the-end"><a href="#Repeat-instructions-at-the-end" class="headerlink" title="Repeat instructions at the end"></a>Repeat instructions at the end</h2><p>在末尾重复指令。</p><p>模型可能容易受到<strong>近因偏差</strong>的影响，在此上下文中，这意味着提示结束时的信息对输出的影响可能比提示开头的信息更大。 因此，值得尝试的是，在提示结束时重复指令，并评估对生成的响应的影响。</p><h2 id="Prime-the-output"><a href="#Prime-the-output" class="headerlink" title="Prime the output"></a>Prime the output</h2><p>引导输出。</p><p>这是指在提示的末尾包含几个字词或短语，以获取遵循所需形式的模型响应。 例如，使用<code>“一个可能的搜索查询是：”</code>引导模型生成单个输出。 如果没有此提示，模型将生成多个搜索查询作为输出。</p><h2 id="Add-clear-syntax"><a href="#Add-clear-syntax" class="headerlink" title="Add clear syntax"></a>Add clear syntax</h2><p>添加明确的语法。</p><p>对提示使用明确的语法（包括标点符号、标题和节标记）有助于传达意向，并且通常使输出更易于分析。</p><p>分隔符（例如 <code>---</code>） </p><p>标题或特殊变量以大写形式显示，用于区分。</p><p>考虑使用 <a href="https://markdown.com.cn/">Markdown</a> 或 <a href="https://www.w3schools.cn/xml/default.asp">XML</a>。 这些模型已通过 Markdown 和 XML 的大量 Web 内容进行了训练，这可能会提供更好的结果。</p><h2 id="Break-the-task-down"><a href="#Break-the-task-down" class="headerlink" title="Break the task down"></a>Break the task down</h2><p>分解任务。</p><p>如果任务分解为较小的步骤，大型语言模型(LLM)的性能通常会更好。</p><h2 id="Use-of-affordances"><a href="#Use-of-affordances" class="headerlink" title="Use of affordances"></a>Use of affordances</h2><p>使用可供性。</p><p>让模型使用 <strong>affordances</strong>-<a href="https://www.interaction-design.org/literature/topics/affordances">可供性</a>，而不是仅依赖其自身的参数来获取信息和答案。</p><p>例如，<strong>搜索</strong>可以作为一种可供性来帮助减轻虚构答案的风险，并获取最新的信息。</p><p>要使用可供性的方法，在模型生成文本时停止生成，并将结果从外部资源（例如搜索引擎）中获取的信息粘贴回提示中，可以按照以下步骤进行：</p><ol><li>提供初始提示：将问题或任务的初始提示作为输入提供给模型。</li><li>生成部分文本：使用模型生成一部分文本，但在需要使用可供性时停止生成。你可以通过设置生成文本的长度或添加特殊的标记来指示停止生成。</li><li>获取外部信息：将停止生成的部分文本复制，并使用外部资源（例如搜索引擎）来获取相关的信息和答案。在搜索引擎中输入部分文本，获取最新的信息和相关内容。</li><li>将结果粘贴回提示中：将从外部资源获取的信息和答案粘贴回初始提示中，并将新的提示作为输入提供给模型。</li><li>继续生成：使用更新后的提示作为输入，继续让模型生成接下来的文本。</li></ol><p>通过这种方式，模型可以利用外部资源的可供性来获取最新的信息，并将其整合到生成的文本中，从而减轻虚构答案的风险。</p><p>请注意，使用可供性的方法需要注意保持生成文本的连贯性和一致性。在粘贴外部信息回提示中时，确保新的提示与之前的文本保持逻辑和语义的一致性，以便生成的文本仍然具有合理性。此外，注意使用外部资源时要遵循相应的法律、政策和道德准则。</p><h2 id="Chain-of-thought-prompting"><a href="#Chain-of-thought-prompting" class="headerlink" title="Chain of thought prompting"></a>Chain of thought prompting</h2><p>思维链提示。</p><p>这是<strong>分解任务</strong>技术的变体。 在这种方法中，不是将一项任务分割成较小的步骤，而是<strong>指示</strong>模型响应<em>逐步进行</em>，并提出所有涉及的步骤。 这样做可以减少结果不准确的可能性，并使评估模型响应更容易。</p><h2 id="Specifying-the-output-structure"><a href="#Specifying-the-output-structure" class="headerlink" title="Specifying the output structure"></a>Specifying the output structure</h2><p>指定输出结构。</p><p>使用提示指定输出结构时，可能会对结果的性质和质量产生重大影响。 有时，系统消息输入“仅写出真实事实”或“不捏造信息”可能不足以缓解问题。 相反，要求模型响应同时包含引文有助于减少错误响应的概率。</p><h2 id="Temperature-and-Top-p-parameters"><a href="#Temperature-and-Top-p-parameters" class="headerlink" title="Temperature and Top_p parameters"></a>Temperature and Top_p parameters</h2><p>温度和Top_p参数。</p><p>改变温度参数会改变模型的输出。 温度参数可以设置为 0 到 2。 较高的值（例如 0.7）将使输出更随机，并产生更多发散的响应，而较小的值（例如 0.2）将使输出更加集中和具体。 </p><p>虚构的故事可以使用更高的温度生成。</p><p> 而要生成法律文件的话，建议使用低得多的温度。</p><p> Top_probability 是另一个参数，与温度类似，它也控制模型响应的随机性，但它的控制方式有所不同。 一般建议一次只更改这两个参数其中之一，而不是同时更改它们。</p><h2 id="Provide-grounding-context"><a href="#Provide-grounding-context" class="headerlink" title="Provide grounding context"></a>Provide grounding context</h2><p>提供基础上下文。</p><p>提供可靠答案的最有效方法之一是为模型提供数据，让它从基础数据得出响应。 如果你的用例依赖于最新、可靠的信息，且不是纯粹的创意场景，我们强烈建议提供基础数据。 通常，源材料越接近所需答案的最终形式，模型需要完成的工作就越少，这意味着出错的可能性就越小。</p>]]></content>
    
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Azure OpenAI</title>
    <link href="/2023/06/12/Azure%20OpenAI/"/>
    <url>/2023/06/12/Azure%20OpenAI/</url>
    
    <content type="html"><![CDATA[<h1 id="Azure-OpenAI"><a href="#Azure-OpenAI" class="headerlink" title="Azure OpenAI"></a>Azure OpenAI</h1><p>“<em>我如何构建像 ChatGPT 这样的系统，使用我自己的数据作为其响应的基础？</em>”</p><p><a href="https://azure.microsoft.com/en-us/products/search/"><em>Azure Cognitive Search</em></a> and <a href="https://azure.microsoft.com/en-us/products/cognitive-services/openai-service/"><em>Azure OpenAI Service</em></a> 组合为这种情况提供了有效的解决方案.</p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>1.<a href="https://www.ibm.com/topics/api">API</a></p><p>2.<a href="https://www.ibm.com/topics/rest-apis">REST API</a></p><p>3.<a href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/concepts/models">Models</a></p><p>4.<a href="https://www.techtarget.com/whatis/definition/red-teaming#:~:text=Red%20teaming%20is%20the%20practice%20of%20rigorously%20challenging,that%20uses%20strategies%20to%20encourage%20an%20outsider%20perspective.">Red teaming</a></p><p>5.<a href="https://chat.openai.com/share/d3cd4322-1ef7-4e94-82ca-0645c94d9828">LLMs</a></p><p>6.<a href="https://zh.wikipedia.org/wiki/JSON">JSON</a></p><p>7.<a href="https://gipsyfine.github.io/2023/06/12/Prompt%20Engineering/">Prompt Engineering</a></p><p>8.<a href="https://gipsyfine.github.io/2023/06/12/Prompt%20Engineering%20Techniques/">Prompt Engineering Techniques</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
